id: lora_sdr_hier_rx
label: Rx_chain
category: '[LoRa]'
flags: [python, cpp]

templates:
  imports: import lora_sdr
  make: lora_sdr.hier_rx(${samp_rate}, ${bw}, ${sf}, ${impl_head}, ${cr}, ${pay_len}, ${has_crc}, ${exit})

cpp_templates: 
     includes: ['#include <lora_sdr/hier_rx.h>'] 
     declarations: 'lora_sdr::hier_rx::sptr ${id};' 
     make: 'this->${id} = lora_sdr::hier_rx::make(${samp_rate}, ${bw}, ${sf}, ${impl_head}, ${cr}, ${pay_len}, ${has_crc}, ${exit});' 

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
-   id: sf
    label: Sf
    dtype: int
-   id: samp_rate
    label: Samp_rate
    dtype: int
-   id: bw
    label: Bw
    dtype: int
-   id: has_crc
    label: Has_crc
    dtype: bool
    default: 'False'
-   id: pay_len
    label: Pay_len
    dtype: int
-   id: cr
    label: Cr
    dtype: int
-   id: sf
    label: Sf
    dtype: int
-   id: impl_head
    label: Impl_head
    dtype: bool
-   id: exit
    label: Exit
    dtype: bool
    default: True

asserts:
-   ${ sf ==7 or sf == 8 or sf ==9 or sf == 10 or sf == 11 or sf ==12 }
-   ${ cr ==0 or cr ==2 or cr ==3 or cr ==4 }

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
-   domain: stream
    dtype: complex

outputs:
-   domain: message
    id: msg
    optional: true

documentation: |-
    Wrapper block that hold the entire Rx chain :
    (frame_sync, fft_demod, gray demap, deinterleaver, hamming dec, header decoder, dewhitening, crc verify)
    Input: 
        trigg : stream of complex sampled 
    Output:
        out : decoded output message

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
