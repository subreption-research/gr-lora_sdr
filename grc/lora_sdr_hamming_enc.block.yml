# auto-generated by grc.converter

id: lora_sdr_hamming_enc
label: Hamming enc
category: '[LoRa]/Tx'
flags: [python, cpp]

parameters:
-   id: cr
    label: Cr
    dtype: int
    default : '3'
-   id: sf
    label: Sf
    dtype: int

asserts:
-   ${ cr ==0 or cr ==2 or cr ==3 or cr ==4 }
-   ${ sf ==7 or sf == 8 or sf ==9 or sf == 10 or sf == 11 or sf ==12 }

inputs:
-   domain: stream
    dtype: byte

outputs:
-   domain: stream
    dtype: byte

templates:
    imports: import lora_sdr
    make: lora_sdr.hamming_enc(${cr}, ${sf})

cpp_templates: 
     includes: ['#include <lora_sdr/hamming_enc.h>'] 
     declarations: 'lora_sdr::hamming_enc::sptr ${id};' 
     make: 'this->${id} = lora_sdr::hamming_enc::make(${cr}, ${sf});' 


documentation: |-
    Append the parity bits to a nibble in accordance to the coding rate.
        Parameters:
            Cr: coding rate must be [0,2,3,4]
            sf: spreading factor
        Input:
            in: stream of nibble
        Output:
            out: stream of bytes containing a nibble of data and corresponding parity bits.

file_format: 1
